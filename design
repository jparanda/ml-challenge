Mercadolibre Challenge
======================

Diseño de la solucion
---------------------

1. Crear un metodo isMutant con la firma:

public boolean isMutant(String [] dna) {}  donde:

String[] dna --> representa cada fila en una tabla de NxN

Consideraciones
---------------

Sabrás si un humano es mutante, si encuentras más de una secuencia de cuatro letras
iguales, de forma oblicua, horizontal o vertical.

*. revisar la secuencia de forma horizontal
*. revisar la secuencia de forma vertical
*. revisar la secuencua de forma oblicua.

Validaciones 
------------

TODO

String[] dna --> solo debe aceptar los caracteres A, T, C, G
String[] dna --> debe validarse que no se vacio o nulo
String[] dna --> cada elemento del arreglo debe ser de la misma longitud para poder ser una matriz de NxN



Example


String[] dna = {"ATGCGA","TAGTGC","TTATGT", "TGAAGG","TCCCTA","GCACTG"};

				"ATGCGA",
				"TAGTGC",
				"TTATGT",
				"TGAAGG",
				"TCCCTA",
				"GCACTG"

Prueba de escritorio
--------------------

"A(0,0)  T(0,1)  G(0,2)  C(0,3)  G(0,4)  A(0,5) A(0,6) "

"C(1,0)  A(1,1)  G(1,2)  T(1,3)  G(1,4)  C(1,5) A(1,6)"

"T(2,0)  T(2,1)  A(2,2)  T(2,3)  G(2,4)  T(2,5) A(2,6)"

"A(3,0)  G(3,1)  A(3,2)  A(3,3)  G(3,4)  G(3,5) A(1,6)"

"C(4,0)  C(4,1)  C(4,2)  C(4,3)  T(4,4)  A(4,5) A(1,6)"

"T(5,0)  C(5,1)  A(5,2)  C(5,3)  T(5,4)  G(5,6) A(1,6)"

"T(6,0)  C(6,1)  A(6,2)  C(6,3)  T(6,4)  G(6,5) A(6,6)"

Primer ronda
i = 0 
j = 0
dnaFined = 1
dna.length = 6
dna[i].length() = 5

Segunda Ronda

i = 0 
j = 1
dnaFined = 1
dna.length = 6
dna[i].length() = 5

tercera Ronda

i = 0 
j = 2
dnaFined = 1
dna.length = 6
dna[i].length() = 5

Crear proyecto en maven
-----------------------

mvn archetype:generate -DgroupId=com.jparandag -DartifactId=mutant-search -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false


Testing
-------

Mutant
{"dna":["ATGCGA","CAGTGC","TTATGT","AGAAGG","CCCCCA","TCACTG"]}

0 = "ATGCGA"
1 = "CAGTGC"
2 = "TTATGT"
3 = "AGAAGG"
4 = "CCCCCA"
5 = "TCACTG"

0 = 	"ATGCGA","CAGTGC","TTATGT","AGAAGG","CCCCCA","TCACTG"
	

{"dna":["ATCCGA","CGCAGC","GTCGTT","TTCCAC","GTGACA","CTCCTG"]}

Human

{"dna":["ATGCGA","CAGTGC","TTATTT","AGACGG","GCGTCA","TCACTG"]}
					
					
{"dna":["ATGCGA","CAGAGC","GTAGTT","TGACAC","GATTAA","CGCCTG"]}




Build docker image for the service
----------------------------------

docker build -t <imagen_name> .  --the name that you define in the docker-compose file 

for example
 

docker build -t api-docker-image .

Start the docker compose
-------------------------

docker-compose up



Deploy docker compose on AWS
----------------------------

https://medium.com/@peatiscoding/docker-compose-ecs-91b033c8fdb6


